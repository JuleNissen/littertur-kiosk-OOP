#BlueJ class context
comment0.target=Register
comment0.text=\r\n\ Models\ a\ digital\ register\ for\ various\ kinds\ of\ Publications\r\n\r\n\ @author\ Alejandro\ Gr\u00F8nhaug,\ Jahn-Willy\r\n\ @version\ 16.4.2018\ (dd.mm.yyyy)\r\n
comment1.params=
comment1.target=Register()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Register\r\n
comment10.params=title
comment10.target=void\ printAllPublicationsWithTitle(java.lang.String)
comment10.text=\r\n\ Prints\ all\ publication\ found\ with\ same\ title.\r\n\ Prints\ title\ and\ publisher.\r\n
comment11.params=title
comment11.target=Publications\ findPublication(java.lang.String)
comment11.text=\r\n\ Searches\ for\ publications\ by\ title\r\n\ @return\ string\ to\ search\ for\ title\r\n
comment12.params=title
comment12.target=Publications\ removePublication(java.lang.String)
comment12.text=\r\n\ Find\ and\ delete\ a\ publication\ by\ title\r\n\ @return\ found\ publication\ to\ delete\r\n
comment13.params=
comment13.target=void\ findPublicationUserDefined()
comment13.text=\r\n\ Search\ and\ print\ publication\ given\ by\ user.\r\n\ If\ method\ does\ not\ find\ publication\ with\ same\ name\ will\ print\r\n\ "Could\ not\ find\ any\ Finn\ meg\ in\ publication\ list"\r\n
comment14.params=
comment14.target=boolean\ isEmpty()
comment14.text=\r\n\ Return\ 'true'\ if\ the\ publication\ list\ is\ rempty\r\n\ @Return\ 'true'\ if\ the\ publication\ list\ is\ rempty\r\n
comment2.params=publisher\ title\ author\ yearPublished\ monthPublished\ dayPublished
comment2.target=void\ addBookPublication(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ int,\ int)
comment2.text=\r\n\ adds\ a\ new\ book\ to\ publication\ list\r\n
comment3.params=publisher\ title\ issueNr\ yearPublished\ monthPublished\ dayPublished
comment3.target=void\ addPeriodicalPublication2(java.lang.String,\ java.lang.String,\ int,\ int,\ int,\ int)
comment3.text=\r\n\ adds\ periodicals\ without\ genre\ to\ publications\ list\r\n
comment4.params=publisher\ title\ issueNr\ genre\ yearPublished\ monthPublished\ dayPublished
comment4.target=void\ addPeriodicalPublication(java.lang.String,\ java.lang.String,\ int,\ java.lang.String,\ int,\ int,\ int)
comment4.text=\r\n\ adds\ periodicals\ to\ publications\ list\r\n
comment5.params=
comment5.target=java.util.Iterator\ isAGivenPublication()
comment5.text=\r\n\ Lists\ and\ prints\ all\ elements\ in\ SeriesBooks\ list\r\n\ Duplicate\ this\ for\ other\ as\ well.\r\n\ just\ change\ instanceof\ **\r\n
comment6.params=title
comment6.target=void\ addPublicationsTest2(java.lang.String)
comment6.text=\r\n\ Test\ for\ adding\ publication\ using\ a\ user\ defined\ String\r\n
comment7.params=
comment7.target=void\ listAllPublications()
comment7.text=\r\n\ List\ all\ publications\ in\ the\ registrer\r\n
comment8.params=title
comment8.target=java.util.Iterator\ findAllPublicationsByTitle(java.lang.String)
comment8.text=\r\n\ Search\ for\ publications\ by\ title\ using\ Iterator\r\n\ String\ stops\ if\ space\ is\ found...\ needs\ fix.\r\n\ @param\ title,\ the\ tile\ of\ publication\ you\ wish\ to\ search\ for\r\n\ @return\ publication(s)\ found\ with\ matching\ title\ \r\n
comment9.params=
comment9.target=java.util.Iterator\ getIterator()
comment9.text=\r\n\ Returns\ an\ iterator\ to\ the\ collection\ of\ Publications\ in\ the\ register.\r\n\ Makes\ it\ possible\ for\ other\ objects\ to\ iterate\ over\ all\ the\ Publications\ in\ register.\r\n\ @return\ an\ iterator\ to\ the\ colletion\ of\ persons\ in\ the\ register\r\n
numComments=15
